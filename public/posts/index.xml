<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Julio&#39;z Blog</title>
		<link>https://julitiux.github.io/posts/</link>
		<description>Recent content in Posts on Julio&#39;z Blog</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Tue, 01 Sep 2020 22:05:10 -0500</lastBuildDate>
		<atom:link href="https://julitiux.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Python</title>
			<link>https://julitiux.github.io/posts/python/</link>
			<pubDate>Tue, 01 Sep 2020 22:05:10 -0500</pubDate>
			
			<guid>https://julitiux.github.io/posts/python/</guid>
			<description>GETTING STARTED How To Install There are two versions of Python available: Python 2 and the newer Python 3. By default in Mac OS has Python 2.
How to know the version that you has, type something like this:
~ » python --version Python 2.7.16 Python comes with an interpreter that runs a terminal. For launch the interpreter, open a terminal and write something like this:
~ » python WARNING: Python 2.</description>
			<content type="html"><![CDATA[<h1 id="getting-started">GETTING STARTED</h1>
<h2 id="how-to-install">How To Install</h2>
<p>There are two versions of Python available: Python 2 and the newer Python 3. By default in Mac OS has Python 2.</p>
<p>How to know the version that you has, type something like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">~</span> <span class="err">»</span> <span class="n">python</span> <span class="o">--</span><span class="n">version</span>
<span class="n">Python</span> <span class="mf">2.7</span><span class="o">.</span><span class="mi">16</span>
</code></pre></div><p>Python comes with an interpreter that runs a terminal. For launch the interpreter, open a terminal and write something like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">~</span> <span class="err">»</span> <span class="n">python</span>

<span class="n">WARNING</span><span class="p">:</span> <span class="n">Python</span> <span class="mf">2.7</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">recommended</span><span class="o">.</span>
<span class="n">This</span> <span class="n">version</span> <span class="ow">is</span> <span class="n">included</span> <span class="ow">in</span> <span class="n">macOS</span> <span class="k">for</span> <span class="n">compatibility</span> <span class="k">with</span> <span class="n">legacy</span> <span class="n">software</span><span class="o">.</span>
<span class="n">Future</span> <span class="n">versions</span> <span class="n">of</span> <span class="n">macOS</span> <span class="n">will</span> <span class="ow">not</span> <span class="n">include</span> <span class="n">Python</span> <span class="mf">2.7</span><span class="o">.</span>
<span class="n">Instead</span><span class="p">,</span> <span class="n">it</span> <span class="ow">is</span> <span class="n">recommended</span> <span class="n">that</span> <span class="n">you</span> <span class="n">transition</span> <span class="n">to</span> <span class="n">using</span> <span class="s1">&#39;python3&#39;</span> <span class="kn">from</span> <span class="nn">within</span> <span class="nn">Terminal.</span>

<span class="n">Python</span> <span class="mf">2.7</span><span class="o">.</span><span class="mi">16</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">Feb</span> <span class="mi">29</span> <span class="mi">2020</span><span class="p">,</span> <span class="mo">01</span><span class="p">:</span><span class="mi">55</span><span class="p">:</span><span class="mi">37</span><span class="p">)</span>
<span class="p">[</span><span class="n">GCC</span> <span class="mf">4.2</span><span class="o">.</span><span class="mi">1</span> <span class="n">Compatible</span> <span class="n">Apple</span> <span class="n">LLVM</span> <span class="mf">11.0</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">clang</span><span class="o">-</span><span class="mf">1103.0</span><span class="o">.</span><span class="mf">29.20</span><span class="p">)</span> <span class="p">(</span><span class="o">-</span><span class="n">macos10</span><span class="o">.</span><span class="mi">15</span><span class="o">-</span><span class="n">objc</span><span class="o">-</span> <span class="n">on</span> <span class="n">darwin</span>
<span class="n">Type</span> <span class="s2">&#34;help&#34;</span><span class="p">,</span> <span class="s2">&#34;copyright&#34;</span><span class="p">,</span> <span class="s2">&#34;credits&#34;</span> <span class="ow">or</span> <span class="s2">&#34;license&#34;</span> <span class="k">for</span> <span class="n">more</span> <span class="n">information</span><span class="o">.</span>
<span class="o">&gt;&gt;&gt;</span>
</code></pre></div><p>To install Python 3, go on your terminal and run the following command:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">~ » brew install python3
</code></pre></div><h2 id="how-to-install-pyenv">How To Install PyEnv</h2>
<h3 id="build-build-dependencies">Build Build Dependencies</h3>
<p>pyenv builds Python from source, which means you will need build dependencies to actually use pyenv.</p>
<p>This command relies on Homebrew and installs the few dependencies for macOS users.</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">brew install openssl readline sqlite3 xz zlib
</code></pre></div><h3 id="using-the-pyenv-installer">Using the pyenv-installer</h3>
<p>After you have installed the build dependencies, you are ready to install pyenv itself.</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">curl https://pyenv.run <span class="p">|</span> bash
</code></pre></div><p>This command will install pyenv along with a few plugins that are useful:</p>
<ul>
<li><em>pyenv</em>: The actual pyenv application</li>
<li><em>pyenv-virtualenv</em>: Plugin for pyenv and virtual environments</li>
<li><em>pyenv-update</em>: Plugin for updating pyenv</li>
<li><em>pyenv-doctor</em>: Plugin to verify that pyenv and build dependencies are installed</li>
<li><em>pyenv-which-ext</em>: Plugin to automatically lookup system commands</li>
</ul>
<p>At the end of the run, you should see something like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">WARNING: seems you still have not added <span class="s1">&#39;pyenv&#39;</span> to the load path.

<span class="c1"># Load pyenv automatically by adding</span>
<span class="c1"># the following to ~/.bashrc:</span>

<span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$HOME</span><span class="s2">/.pyenv/bin:</span><span class="nv">$PATH</span><span class="s2">&#34;</span>
<span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>pyenv init -<span class="k">)</span><span class="s2">&#34;</span>
<span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>pyenv virtualenv-init -<span class="k">)</span><span class="s2">&#34;</span>
</code></pre></div><p>Once you have done this, you need to reload your shell:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">soruce .zshrc
</code></pre></div><h2 id="using-pyenv">Using pyenv.</h2>
<h3 id="list-all-pythons-availables">List all pythons availables.</h3>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">pyenv install --list
pyenv install --list <span class="p">|</span> grep <span class="s2">&#34;jython&#34;</span>
pyenv install --list <span class="p">|</span> grep <span class="s2">&#34; 3\.[678]&#34;</span>
</code></pre></div><h3 id="install-a-version-of-python">Install a version of python.</h3>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">pyenv install -v 3.7.2
pyenv install 3.8-dev
</code></pre></div><h3 id="installation-location">Installation Location.</h3>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">ls ~/.pyenv/versions/
</code></pre></div><h3 id="uninstall-a-version-of-python">Uninstall a version of python.</h3>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">rm -rf ~/.pyenv/versions/2.7.15
</code></pre></div><p>or</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">pyenv uninstall 2.7.15
</code></pre></div><h2 id="running-python-programs-from-a-terminal">Running Python Programs from a terminal</h2>
<p>To start your first program, make a file called hello_world.py and enter the following line:</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="k">print</span><span class="p">(</span><span class="s2">&#34;Hello Python world!&#34;</span><span class="p">)</span>
</code></pre></div><p>Open a terminal and then, run the file using the command python, like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">python hello_world.py
</code></pre></div><h1 id="variables-and-simple-data-types">VARIABLES AND SIMPLE DATA TYPES</h1>
<h2 id="naming-and-using-variables">Naming and Using Variables</h2>
<p>In the same file, we are going to do something like this:</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">message</span> <span class="o">=</span> <span class="s2">&#34;Hello Python World!&#34;</span>
<span class="k">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</code></pre></div><ul>
<li>Variable names can contain only letters, numbers, and underscores.</li>
<li>Spaces are not allowed in variable names, but underscores can be used to separate words in variable names.</li>
<li>Variable names should be short but descriptive</li>
</ul>
<h2 id="strings">Strings</h2>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="s2">&#34;This is a string.&#34;</span>
<span class="s1">&#39;This is a string.&#39;</span>

<span class="s1">&#39;This flexibility &#34;allows&#34; you to use quotes and apostrophes within your strings.&#39;</span>
<span class="s2">&#34;This flexibility &#39;allows&#39; you to use quotes and apostrophes within your strings.&#34;</span>
<span class="s2">&#34;This flexibility allows you to use quotes and apostrophe&#39;s within your strings.&#34;</span>
</code></pre></div><h3 id="changing-case-in-a-string-with-methods">Changing Case in a String with Methods</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;julio ramirez&#34;</span>
<span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="o">.</span><span class="n">title</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="o">.</span><span class="n">upper</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
</code></pre></div><h3 id="combining-or-concatenating-strings">Combining or Concatenating Strings</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">first_name</span> <span class="o">=</span> <span class="s1">&#39;Julio&#39;</span>
<span class="n">last_name</span> <span class="o">=</span> <span class="s1">&#39;Ramirez&#39;</span>
<span class="n">full_name</span> <span class="o">=</span> <span class="n">first_name</span> <span class="o">+</span> <span class="s2">&#34; &#34;</span> <span class="o">+</span> <span class="n">last_name</span>
<span class="k">print</span><span class="p">(</span><span class="s2">&#34;Hello, &#34;</span> <span class="o">+</span> <span class="n">full_name</span><span class="o">.</span><span class="n">title</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&#34;!&#34;</span><span class="p">)</span>
</code></pre></div><h3 id="adding-whitespace-to-string-with-tabs-or-newlines">Adding Whitespace to String with Tabs or Newlines</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\t</span><span class="s2">Python&#34;</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s2">&#34;Languages:</span><span class="se">\n\t</span><span class="s2">Python</span><span class="se">\n\t</span><span class="s2">Swift</span><span class="se">\n\t</span><span class="s2">Groovy&#34;</span><span class="p">)</span>
</code></pre></div><h3 id="stripping-whitespace">Stripping Whitespace</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">language</span> <span class="o">=</span> <span class="s1">&#39; groovy &#39;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language</span>
<span class="s1">&#39; python &#39;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language</span><span class="o">.</span><span class="n">rstrip</span><span class="p">()</span>
<span class="s1">&#39; python&#39;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language</span><span class="o">.</span><span class="n">lstrip</span><span class="p">()</span>
<span class="s1">&#39;python &#39;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<span class="s1">&#39;python&#39;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language</span>
<span class="s1">&#39; python &#39;</span>
</code></pre></div><h2 id="numbers">Numbers</h2>
<h3 id="integers">Integers</h3>
<p>You can add (+), subtract (-), multiply ( * ), divide (/), exponents( ** ) integers in Python.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span>
<span class="mi">5</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">2</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span> <span class="o">*</span> <span class="mi">3</span>
<span class="mi">6</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span> <span class="o">/</span> <span class="mi">2</span>
<span class="mf">1.5</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span> <span class="o">**</span> <span class="mi">3</span>
<span class="mi">27</span>
</code></pre></div><h3 id="floats">Floats</h3>
<p>Python calls any number with a decimal point a float.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="mf">0.1</span> <span class="o">+</span> <span class="mf">0.1</span>
<span class="mf">0.2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mf">0.2</span> <span class="o">+</span> <span class="mf">0.2</span>
<span class="mf">0.4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span> <span class="o">*</span> <span class="mf">0.1</span>
<span class="mf">0.2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span> <span class="o">*</span> <span class="mf">0.2</span>
<span class="mf">0.4</span>
</code></pre></div><p>But be aware that you can sometimes get an arbitrary number of decimal places in your answer.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="mf">0.2</span> <span class="o">+</span> <span class="mf">0.1</span>
<span class="mf">0.30000000000000004</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">3</span> <span class="o">*</span> <span class="mf">0.1</span>
<span class="mf">0.30000000000000004</span>
</code></pre></div><h3 id="avoid-type-errors-with-the-str-function">Avoid Type Errors with the str() Function</h3>
<p>This is a type error. It means Python can not recognize the kind of information you are using. In ths example Python sees that you are using variable that has an integer value (int), but it is not sure how to interpret that value.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">age</span> <span class="o">=</span> <span class="mi">23</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">message</span> <span class="o">=</span> <span class="s2">&#34;happy &#34;</span> <span class="o">+</span> <span class="n">age</span> <span class="o">+</span> <span class="s2">&#34; anios!!&#34;</span>

<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;stdin&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="ne">TypeError</span><span class="p">:</span> <span class="n">can</span> <span class="n">only</span> <span class="n">concatenate</span> <span class="nb">str</span> <span class="p">(</span><span class="ow">not</span> <span class="s2">&#34;int&#34;</span><span class="p">)</span> <span class="n">to</span> <span class="nb">str</span>
</code></pre></div><p>you have to fix it like this.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">message</span> <span class="o">=</span> <span class="s2">&#34;happy &#34;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">age</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&#34; anios!!&#34;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
<span class="n">happy</span> <span class="mi">23</span> <span class="n">anios</span><span class="err">!!</span>
</code></pre></div><h3 id="comments">Comments</h3>
<p>In Python, the hash mark (#) indicates a comment.</p>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="c1"># Never say goodbye</span>
</code></pre></div><h1 id="introducing-list">Introducing List</h1>
<p>A list is a collection of items in a particular order. You can make a list that includes the letters of the alphabet, the digits from 0-9, or the names of all things that you want.</p>
<h3 id="accessing-elements-in-a-list">Accessing Elements in a List</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">bicycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;trek&#39;</span><span class="p">,</span> <span class="s1">&#39;cannondale&#39;</span><span class="p">,</span> <span class="s1">&#39;redline&#39;</span><span class="p">,</span><span class="s1">&#39;specialized&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">bicycles</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div><h2 id="changing-adding-and-removing-elements">Changing, Adding, and Removing Elements</h2>
<h3 id="modifying-elements-in-a-list">Modifying Elements in a List.</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>

<span class="n">motorcycles</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;ducati&#39;</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
</code></pre></div><h3 id="adding-elements-to-a-list">Adding Elements to a List</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>

<span class="n">motorcycles</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;ducati&#39;</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
</code></pre></div><h3 id="inserting-elements-into-a-list">Inserting Elements into a List</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>

<span class="n">motorcycles</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="s1">&#39;ducati&#39;</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
</code></pre></div><h3 id="removing-elements-from-a-list-using-the-_del_-statement">Removing Elements from a List using the <em>del</em> Statement</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>

<span class="k">del</span> <span class="n">motorcycles</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
</code></pre></div><h3 id="removing-elements-from-a-list-using-the-_pop_-method">Removing Elements from a List using the <em>pop()</em> method</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>

<span class="n">popped_motorcycle</span> <span class="o">=</span> <span class="n">motorcycles</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">popped_motorcycle</span><span class="p">)</span>
</code></pre></div><h3 id="popping-items-from-any-position-in-a-list">Popping items from any Position in a list</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>

<span class="n">first_owned</span> <span class="o">=</span> <span class="n">motorcycles</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">first_owned</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
</code></pre></div><h3 id="removing-items-by-value">Removing Items by Value</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">motorcycles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;honda&#39;</span><span class="p">,</span><span class="s1">&#39;yamaha&#39;</span><span class="p">,</span><span class="s1">&#39;suzuki&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>

<span class="n">motorcycles</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">&#39;ducati&#39;</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">motorcycles</span><span class="p">)</span>
</code></pre></div><h2 id="organizing-a-list">Organizing a List</h2>
<h3 id="sorting-a-list-permanently-with-the-sort-method">Sorting a List permanently with the sort() method</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">cars</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;bmw&#39;</span><span class="p">,</span><span class="s1">&#39;audi&#39;</span><span class="p">,</span><span class="s1">&#39;toyota&#39;</span><span class="p">,</span><span class="s1">&#39;subaru&#39;</span><span class="p">]</span>
<span class="n">cars</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">cars</span><span class="p">)</span>
</code></pre></div><h3 id="sorting-a-list-temporarily-with-the-sorted-function">Sorting a List temporarily with the sorted() function</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">cars</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;bmw&#39;</span><span class="p">,</span><span class="s1">&#39;audi&#39;</span><span class="p">,</span><span class="s1">&#39;toyota&#39;</span><span class="p">,</span><span class="s1">&#39;subaru&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">cars</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">cars</span><span class="p">)</span>
</code></pre></div><h3 id="printing-a-list-in-reverse-order">Printing a List in reverse order</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">cars</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;bmw&#39;</span><span class="p">,</span><span class="s1">&#39;audi&#39;</span><span class="p">,</span><span class="s1">&#39;toyota&#39;</span><span class="p">,</span><span class="s1">&#39;subaru&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">cars</span><span class="p">)</span>

<span class="n">cars</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">cars</span><span class="p">)</span>
</code></pre></div><h3 id="finding-the-length-of-a-list">Finding the length of a List</h3>
<div class="highlight"><pre class="chroma"><code class="language-python" data-lang="python"><span class="n">cars</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;bmw&#39;</span><span class="p">,</span><span class="s1">&#39;audi&#39;</span><span class="p">,</span><span class="s1">&#39;toyota&#39;</span><span class="p">,</span><span class="s1">&#39;subaru&#39;</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">cars</span><span class="p">))</span>
</code></pre></div><h1 id="working-with-lists">Working with Lists</h1>
]]></content>
		</item>
		
		<item>
			<title>Swift</title>
			<link>https://julitiux.github.io/posts/swift/</link>
			<pubDate>Tue, 01 Sep 2020 21:55:55 -0500</pubDate>
			
			<guid>https://julitiux.github.io/posts/swift/</guid>
			<description>Getting Started First, download and install Xcode, its available on the App Store. Make sure to download Xcode 8 or higher.
Get started with a playground and Create a new Xcode Project. Playsground were released in Xcode6. They provide an interactive enviroment for rapidly developing and evaluating Swift code. A playground does not require that you compile and run a complete project. Instead, playgrouunds evaluate your Swift code on the fly, so its udeal for testing and experimenting with the Swift languaje in a lightweght enviroment.</description>
			<content type="html"><![CDATA[<h1 id="getting-started">Getting Started</h1>
<p>First, download and install Xcode, its available on the App Store. Make sure to download Xcode 8 or higher.</p>
<p>Get started with a playground and Create a new Xcode Project. Playsground were released in Xcode6. They provide an interactive enviroment for rapidly developing and evaluating Swift code. A playground does not require that you compile and run a complete project. Instead, playgrouunds evaluate your Swift code on the fly, so its udeal for testing and experimenting with the Swift languaje in a lightweght enviroment.</p>
<p>From the welcomescreen, select Get started with a playground, next, name your playground <em>MyPlayground</em>. For the plataform (iOS, macOS, or tvOS), select macOS. Finally, you are prompted to save your playground</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="c1">//: Playground - noun: a place where people can play</span>

<span class="kd">import</span> <span class="nc">Cocoa</span>

<span class="kd">var</span> <span class="nv">str</span> <span class="p">=</span> <span class="s">&#34;Hello, playground&#34;</span>
<span class="n">str</span> <span class="o">+=</span> <span class="s">&#34;!&#34;</span>
</code></pre></div><h1 id="types-constants-and-variables">Types, Constants, and Variables</h1>
<h2 id="types-strings">Types, Strings</h2>
<p>Variables and constants hava a data type. Here, you have assigned an instance of the <em>String</em> type. The type assignment operator (=) assigns the value on its right side to whatever is on its left side.
Swift uses type inference to determine the data type of your variable; the quotation marks indicate that it is a <em>String</em> literal.</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">var</span> <span class="nv">variableString</span><span class="p">:</span> <span class="nb">String</span>
<span class="kd">var</span> <span class="nv">otherVariableString</span> <span class="p">=</span> <span class="s">&#34;Four&#34;</span>

<span class="n">otherVariableString</span> <span class="o">+=</span> <span class="s">&#34; add another thing&#34;</span>
<span class="bp">print</span><span class="p">(</span><span class="n">otherVariableString</span><span class="p">)</span>
</code></pre></div><h2 id="numerical-type">Numerical Type</h2>
<p>Now, we are explicitly declaring the variable to be th Int type using Swift&rsquo;s type annotation syntax. The colon on tje code above represents the phrase <em>&ldquo;of type&rdquo;</em></p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">var</span> <span class="nv">variableInteger</span><span class="p">:</span> <span class="nb">Int</span>
<span class="kd">var</span> <span class="nv">otherVariableInteger</span><span class="p">:</span> <span class="nb">Int</span> <span class="p">=</span> <span class="mi">4</span>

<span class="n">otherVariableInteger</span> <span class="o">+=</span> <span class="mi">2</span>
<span class="bp">print</span><span class="p">(</span><span class="n">otherVariableInteger</span><span class="p">)</span>
</code></pre></div><h2 id="constants">Constants</h2>
<p>We will want to create instances with values that do not change.</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">let</span> <span class="nv">constantInteger</span><span class="p">:</span> <span class="nb">Int</span> <span class="p">=</span> <span class="mi">4</span>
<span class="kd">let</span> <span class="nv">constantString</span><span class="p">:</span> <span class="nb">String</span> <span class="p">=</span> <span class="s">&#34;This a String&#34;</span>

<span class="n">constantInteger</span> <span class="o">+=</span> <span class="mi">4</span> <span class="c1">//Error</span>
</code></pre></div><h2 id="string-interpolation">String interpolation</h2>
<p>String interpolation lets you combine constant and variables into a new string.</p>
<div class="highlight"><pre class="chroma"><code class="language-swift" data-lang="swift"><span class="kd">var</span> <span class="nv">variableInteger</span><span class="p">:</span> <span class="nb">Int</span> <span class="p">=</span> <span class="mi">4</span>
<span class="kd">var</span> <span class="nv">variableString</span><span class="p">:</span> <span class="nb">String</span> <span class="p">=</span> <span class="s">&#34;String&#34;</span>
<span class="kd">let</span> <span class="nv">constant</span><span class="p">:</span> <span class="nb">String</span> <span class="p">=</span> <span class="s">&#34;You can use the interpolation in all variables and constants, like </span><span class="si">\(</span><span class="n">variableInteger</span><span class="si">)</span><span class="s"> and </span><span class="si">\(</span><span class="n">variableString</span><span class="si">)</span><span class="s">&#34;</span>
<span class="bp">print</span><span class="p">(</span><span class="n">constant</span><span class="p">)</span>
</code></pre></div><h1 id="conditional">Conditional</h1>
]]></content>
		</item>
		
	</channel>
</rss>
